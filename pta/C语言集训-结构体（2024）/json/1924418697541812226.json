{
    "submissionDetails": [
        {
            "problemSetProblemId": "1924418697541812226",
            "programmingSubmissionDetail": {
                "compiler": "GCC",
                "program": "#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\ntypedef struct a {\n    char name[20];\n    int cost;\n} Food;\n\nint cmp(const void* a, const void* b) {\n    Food* A = (Food*)a;\n    Food* B = (Food*)b;\n    if (A->cost < B->cost) return 1;\n    else if (A->cost > B->cost) return -1;\n    else return 0;\n}\n\nint main(){\n    int n,m;\n    scanf(\"%d %d\", &m, &n);\n    Food* foods = (Food*)malloc(n * sizeof(Food));\n    for (int i = 0; i < n; i++){\n        scanf(\"%s %d\", foods[i].name, &foods[i].cost);\n    }\n    qsort(foods, n, sizeof(Food), cmp);\n    int sum = 0;\n    for (int i = 0; i < n; i++){\n        if (sum + foods[i].cost > m) continue;\n        sum += foods[i].cost;\n        printf(\"%s\\n\", foods[i].name);\n    }\n    if(sum == 0) printf(\"chitu\\n\");\n    return 0;\n}"
            },
            "problemId": "0"
        }
    ],
    "judgeResponseContents": [
        {
            "status": "ACCEPTED",
            "score": 10.0,
            "programmingJudgeResponseContent": {
                "testcaseJudgeResults": {
                    "1": {
                        "result": "ACCEPTED",
                        "exceed": "UNKNOWN_TESTCASE_EXCEED",
                        "time": 0.002,
                        "memory": 311296,
                        "exitcode": 0,
                        "termsig": 0,
                        "error": "",
                        "stdout": "",
                        "stderr": "",
                        "checkerOutput": "",
                        "testcaseScore": 2.0,
                        "stdoutTruncated": false,
                        "stderrTruncated": false,
                        "showOutput": false
                    },
                    "2": {
                        "result": "ACCEPTED",
                        "exceed": "UNKNOWN_TESTCASE_EXCEED",
                        "time": 0.002,
                        "memory": 577536,
                        "exitcode": 0,
                        "termsig": 0,
                        "error": "",
                        "stdout": "",
                        "stderr": "",
                        "checkerOutput": "",
                        "testcaseScore": 2.0,
                        "stdoutTruncated": false,
                        "stderrTruncated": false,
                        "showOutput": false
                    },
                    "3": {
                        "result": "ACCEPTED",
                        "exceed": "UNKNOWN_TESTCASE_EXCEED",
                        "time": 0.002,
                        "memory": 524288,
                        "exitcode": 0,
                        "termsig": 0,
                        "error": "",
                        "stdout": "",
                        "stderr": "",
                        "checkerOutput": "",
                        "testcaseScore": 2.0,
                        "stdoutTruncated": false,
                        "stderrTruncated": false,
                        "showOutput": false
                    },
                    "4": {
                        "result": "ACCEPTED",
                        "exceed": "UNKNOWN_TESTCASE_EXCEED",
                        "time": 0.001,
                        "memory": 528384,
                        "exitcode": 0,
                        "termsig": 0,
                        "error": "",
                        "stdout": "",
                        "stderr": "",
                        "checkerOutput": "",
                        "testcaseScore": 2.0,
                        "stdoutTruncated": false,
                        "stderrTruncated": false,
                        "showOutput": false
                    },
                    "5": {
                        "result": "ACCEPTED",
                        "exceed": "UNKNOWN_TESTCASE_EXCEED",
                        "time": 0.001,
                        "memory": 585728,
                        "exitcode": 0,
                        "termsig": 0,
                        "error": "",
                        "stdout": "",
                        "stderr": "",
                        "checkerOutput": "",
                        "testcaseScore": 2.0,
                        "stdoutTruncated": false,
                        "stderrTruncated": false,
                        "showOutput": false
                    }
                },
                "compilationResult": {
                    "log": "a.c: In function ‘main’:\na.c:20:5: warning: ignoring return value of ‘scanf’ declared with attribute ‘warn_unused_result’ [-Wunused-result]\n   20 |     scanf(\"%d %d\", &m, &n);\n      |     ^~~~~~~~~~~~~~~~~~~~~~\na.c:23:9: warning: ignoring return value of ‘scanf’ declared with attribute ‘warn_unused_result’ [-Wunused-result]\n   23 |         scanf(\"%s %d\", foods[i].name, &foods[i].cost);\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                    "success": true,
                    "error": ""
                },
                "checkerCompilationResult": {
                    "log": "",
                    "success": false,
                    "error": ""
                }
            },
            "problemSetProblemId": "1924418697541812226"
        }
    ],
    "hints": {},
    "problemSetId": "1921540045437001728",
    "cause": "",
    "id": "1924443938653036544",
    "userId": "1849272780568821760",
    "problemType": "PROGRAMMING",
    "problemSetProblemId": "1924418697541812226",
    "submitAt": "2025-05-19T12:36:04Z",
    "status": "ACCEPTED",
    "score": 10.0,
    "compiler": "GCC",
    "time": 0.002,
    "memory": 585728,
    "previewSubmission": false,
    "judgeAt": "2025-05-19T12:36:04Z"
}